public class Doctor {    private int id;    private String nombreCompleto;    private String especialidad;"    public Doctor(int id, String nombreCompleto, String especialidad) {"        this.id = id;        this.nombreCompleto = nombreCompleto;        this.especialidad = especialidad;    }    // Getters and setters    public int getId() {        return id;    }    public void setId(int id) {        this.id = id;    }    public String getNombreCompleto() {        return nombreCompleto;    }    public void setNombreCompleto(String nombreCompleto) {        this.nombreCompleto = nombreCompleto;    }    public String getEspecialidad() {        return especialidad;    }    public void setEspecialidad(String especialidad) {        this.especialidad = especialidad;    }    // MŽtodo para dar de alta un doctor"    public static void darDeAltaDoctor(int id, String nombreCompleto, String especialidad) {""        Doctor nuevoDoctor = new Doctor(id, nombreCompleto, especialidad);"        // Aqu’ se deber’a implementar la l—gica para almacenar al doctor en una base de datos o en otra estructura de datos."        System.out.println(""Se ha dado de alta al doctor: "" + nuevoDoctor.getNombreCompleto() + "" con especialidad en "" + nuevoDoctor.getEspecialidad());"    }    // Ejemplo de uso    public static void main(String[] args) {"        darDeAltaDoctor(1, ""Juan PŽrez"", ""Cardiolog’a"");""        darDeAltaDoctor(2, ""Ana L—pez"", ""Pediatr’a"");""        darDeAltaDoctor(3, ""Carlos G—mez"", ""Medicina General"");"    }}import java.time.LocalDate;public class Cita {    private int id;    private LocalDate fecha;    private String motivo;    private String hora;    private String nombrePaciente;"    public Cita(int id, LocalDate fecha, String nombrePaciente, String motivo, String hora) {"        this.id = id;        this.fecha = fecha;        this.nombrePaciente = nombrePaciente;        this.motivo = motivo;        this.hora = hora;    }    // Getters and setters    public int getId() {        return id;    }    public void setId(int id) {        this.id = id;    }    public LocalDate getFecha() {        return fecha;    }    public void setFecha(LocalDate fecha) {        this.fecha = fecha;    }    public String getNombrePaciente() {        return nombrePaciente;    }    public void setNombrePaciente(String nombrePaciente) {        this.nombrePaciente = nombrePaciente;    }    public String getMotivo() {        return motivo;    }    public void setMotivo(String motivo) {        this.motivo = motivo;    }    public String getHora() {        return hora;    }    public void setHora(String hora) {        this.hora = hora;    }    // MŽtodo para crear una cita"    public static void crearCita(int id, LocalDate fecha, String nombrePaciente, String motivo, String hora) {""        Cita nuevaCita = new Cita(id, fecha, nombrePaciente, motivo, hora);"        // Aqu’ se deber’a implementar la l—gica para almacenar la cita en una base de datos o en otra estructura de datos."        System.out.println(""Se ha creado la cita: "" + nuevaCita.getId() + "" para "" + nuevaCita.getNombrePaciente() + "" el "" + nuevaCita.getFecha() + "" a las "" + nuevaCita.getHora() + "" con motivo: "" + nuevaCita.getMotivo());"    }    // Ejemplo de uso    public static void main(String[] args) {"        crearCita(1, LocalDate.of(2024, 5, 31), ""Juan PŽrez"", ""Revisi—n general"", ""10:00"");""        crearCita(2, LocalDate.of(2024, 6, 10), ""Ana L—pez"", ""Control de presi—n arterial"", ""14:30"");""        crearCita(3, LocalDate.of(2024, 6, 15), ""Carlos G—mez"", ""Limpieza dental"", ""09:00"");"    }}public class Paciente {    private int id;    private String nombreCompleto;"    public Paciente(int id, String nombreCompleto) {"        this.id = id;        this.nombreCompleto = nombreCompleto;    }    // Getters and setters    public int getId() {        return id;    }    public void setId(int id) {        this.id = id;    }    public String getNombreCompleto() {        return nombreCompleto;    }    public void setNombreCompleto(String nombreCompleto) {        this.nombreCompleto = nombreCompleto;    }    // MŽtodo para dar de alta un paciente"    public static void darDeAltaPaciente(int id, String nombreCompleto) {""        Paciente nuevoPaciente = new Paciente(id, nombreCompleto);"        // Aqu’ se deber’a implementar la l—gica para almacenar al paciente en una base de datos o en otra estructura de datos."        System.out.println(""Se ha dado de alta al paciente: "" + nuevoPaciente.getNombreCompleto());"    }    // Ejemplo de uso    public static void main(String[] args) {"        darDeAltaPaciente(1, ""Juan Perez"");""        darDeAltaPaciente(2, ""Carlos Gomez"");""        darDeAltaPaciente(3, ""Ana L—pez"");"    }}
